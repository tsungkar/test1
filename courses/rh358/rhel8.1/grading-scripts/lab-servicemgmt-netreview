#!/bin/bash
#
# Copyright 2020 Red Hat, Inc.
#
# NAME
#     lab-servicemgmt-netreview - start/finish script for RH358
#
# SYNOPSIS
#     lab-servicemgmt-netreview {start|finish}
#
# DESCRIPTION
#     This script performs the start/finish steps for the IPv4 network
#     review guided exercise for RH358. Since the student does their work
#     on servera, this script removes/restores the network configuration
#     of the 2nd network interface. It also configures/restores the 2nd
#     network interface on another host to respond to pings directed
#     to 192.168.0.254.
#
# CHANGELOG
#   * Thu Mar 17 2020 George Hacker <ghacker@redhat.com>
#   - original code


PATH=/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin

# Initialize and set some variables
run_as_root='true'

host='servera'
gateway='serverd'
iface_number='2'
gateway_IP4='192.168.0.254/24'

declare -a valid_commands=(start finish)

# Usage: rhel_config_save host path-to-config-file

function rhel_config_save {

  local -r host="${1}" config_path="${2}"
  local -r backup_path="/tmp/${config_path##*/}"

  if ${ssh} ${host} "[[ ! -f '${backup_path}' ]]" ; then
    pad " · Backing up ${config_path}"
    if ${ssh} ${host} "cp -f '${config_path}' '${backup_path}'" ; then
      print_SUCCESS
    else
      print_FAIL
    fi
  fi
}

# Usage: rhel_config_restore host path-to-config-file

function rhel_config_restore {

  local -r host="${1}" config_path="${2}"
  local -r backup_path="/tmp/${config_path##*/}"

  if ${ssh} ${host} "[[ -f '${backup_path}' ]]" ; then
    pad " · Restoring ${config_path} from backup"
    if ${ssh} ${host} "cp -f '${backup_path}' '${config_path}'" ; then
      print_SUCCESS
      ${ssh} ${host} "rm -f '${backup_path}'"
    else
      print_FAIL
    fi
  fi
}

function lab_start {

  print_header 'Starting servicemgmt-netreview exercise.'

  print_line "Preparing ${host} and ${gateway} for lab exercise work:"
  print_line
  host_reachable ${host}
  host_reachable ${gateway}

  if ! iface_gw=$(rhel_get_nicname ${gateway} ${iface_number}); then
    pad " · Error: unable to get gateway interface name - ${gateway}"
    print_FAIL
    exit 1
  fi
  if ! iface_host=$(rhel_get_nicname ${host} ${iface_number}); then
    pad " · Error: unable to get host interface name - ${host}"
    print_FAIL
    exit 1
  fi

  if ! ${ssh} ${gateway} "nmcli con show id '${iface_gw}'"; then
    pad " · Configuring ${gateway} as an IPv4 gateway"
    cmd1="nmcli con add con-name '${iface_gw}' type ethernet ifname ${iface_gw}"
    cmd2="nmcli con mod '${iface_gw}' ipv4.addresses '${gateway_IP4}'"
    cmd3="nmcli con mod '${iface_gw}' ipv4.method manual"
    cmd4="nmcli con up '${iface_gw}'"
    if ${ssh} ${gateway} "${cmd1} && ${cmd2} && ${cmd3} && ${cmd4}"; then
      print_SUCCESS
    else
      print_FAIL
    fi
  else
    pad " · Warning: network device already configured on ${gateway}"
    print_SUCCESS
  fi

  if ${ssh} ${host} "nmcli con show id '${iface_host}'"; then
    pad " · Unconfiguring network interface on ${host}"
    if ${ssh} ${host} "nmcli con delete id '${iface_host}'"; then
      print_SUCCESS
    else
      print_FAIL
    fi
  fi

  rhel_config_save ${host} /etc/hosts

  print_line
}

function lab_finish {

  print_header 'Finishing servicemgmt-netreview exercise'

  print_line "Restoring ${host} and ${gateway} from lab exercise work:"
  print_line
  host_reachable ${host}
  host_reachable ${gateway}

  if ! iface_gw=$(rhel_get_nicname ${gateway} ${iface_number}); then
    pad " · Error: unable to get gateway interface name - ${gateway}"
    print_FAIL
    exit 1
  fi
  if ! iface_host=$(rhel_get_nicname ${host} ${iface_number}); then
    pad " · Error: unable to get host interface name - ${host}"
    print_FAIL
    exit 1
  fi

  if ${ssh} ${gateway} "nmcli con show id '${iface_gw}'"; then
    pad " · Unconfiguring ${gateway} as an IPv4 gateway"
    if ${ssh} ${gateway} "nmcli con delete id '${iface_gw}'"; then
      print_SUCCESS
    else
      print_FAIL
    fi
  else
    pad " · Warning: network device not configured on ${gateway}"
    print_SUCCESS
  fi

  rhel_config_restore ${host} /etc/hosts

  if ${ssh} ${host} "nmcli con show id '${iface_host}'"; then
    pad " · Unconfiguring network interface on ${host}"
    if ${ssh} ${host} "nmcli con delete id '${iface_host}'"; then
      print_SUCCESS
    else
      print_FAIL
    fi
  else
    pad " · Warning: network device not configured on ${host}"
    print_SUCCESS
  fi

  print_line
}


############### Don't EVER change anything below this line ###############

# Source library of functions
source /usr/local/lib/${function_lib}
source /usr/local/lib/${platform_lib}

grading_main_program "$@"
